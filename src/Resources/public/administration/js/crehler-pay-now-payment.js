(function(){var e={914:function(){},913:function(){},105:function(){},395:function(){let{Application:e}=Shopware,t=Shopware.Classes.ApiService;class n extends t{constructor(e,t){super(e,t)}testApi(){return this.httpClient.post("/paynowpayment/test-api",{},{headers:this.getBasicHeaders()})}refundPayment(e,t,n,r){return this.httpClient.post("/paynowpayment/refund-payment",{orderId:e,amountToRefund:t,descriptionOfRefund:n,productsToRefund:r},{headers:this.getBasicHeaders()})}fetchStatus(e){return this.httpClient.post("/paynowpayment/fetch-refund-payment",{refundId:e},{headers:this.getBasicHeaders()})}}e.addServiceProvider("PayNowOrderService",t=>new n(e.getContainer("init").httpClient,t.loginService))},606:function(e,t,n){var r=n(914);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals),n(346).Z("99b74a28",r,!0,{})},721:function(e,t,n){var r=n(913);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals),n(346).Z("ff9fda52",r,!0,{})},414:function(e,t,n){var r=n(105);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.id,r,""]]),r.locals&&(e.exports=r.locals),n(346).Z("baaa6e18",r,!0,{})},346:function(e,t,n){"use strict";function r(e,t){for(var n=[],r={},a=0;a<t.length;a++){var o=t[a],s=o[0],i={id:e+":"+a,css:o[1],media:o[2],sourceMap:o[3]};r[s]?r[s].parts.push(i):n.push(r[s]={id:s,parts:[i]})}return n}n.d(t,{Z:function(){return f}});var a="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!a)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var o={},s=a&&(document.head||document.getElementsByTagName("head")[0]),i=null,d=0,l=!1,c=function(){},u=null,p="data-vue-ssr-id",h="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function f(e,t,n,a){l=n,u=a||{};var s=r(e,t);return y(s),function(t){for(var n=[],a=0;a<s.length;a++){var i=o[s[a].id];i.refs--,n.push(i)}t?y(s=r(e,t)):s=[];for(var a=0;a<n.length;a++){var i=n[a];if(0===i.refs){for(var d=0;d<i.parts.length;d++)i.parts[d]();delete o[i.id]}}}}function y(e){for(var t=0;t<e.length;t++){var n=e[t],r=o[n.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](n.parts[a]);for(;a<n.parts.length;a++)r.parts.push(w(n.parts[a]));r.parts.length>n.parts.length&&(r.parts.length=n.parts.length)}else{for(var s=[],a=0;a<n.parts.length;a++)s.push(w(n.parts[a]));o[n.id]={id:n.id,refs:1,parts:s}}}}function m(){var e=document.createElement("style");return e.type="text/css",s.appendChild(e),e}function w(e){var t,n,r=document.querySelector("style["+p+'~="'+e.id+'"]');if(r){if(l)return c;r.parentNode.removeChild(r)}if(h){var a=d++;t=g.bind(null,r=i||(i=m()),a,!1),n=g.bind(null,r,a,!0)}else t=b.bind(null,r=m()),n=function(){r.parentNode.removeChild(r)};return t(e),function(r){r?(r.css!==e.css||r.media!==e.media||r.sourceMap!==e.sourceMap)&&t(e=r):n()}}var v=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function g(e,t,n,r){var a=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=v(t,a);else{var o=document.createTextNode(a),s=e.childNodes;s[t]&&e.removeChild(s[t]),s.length?e.insertBefore(o,s[t]):e.appendChild(o)}}function b(e,t){var n=t.css,r=t.media,a=t.sourceMap;if(r&&e.setAttribute("media",r),u.ssrId&&e.setAttribute(p,t.id),a&&(n+="\n/*# sourceURL="+a.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="bundles/crehlerpaynowpayment/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/crehlerpaynowpayment/"),function(){"use strict";n(721);let{Component:e,Context:t}=Shopware,{Criteria:r}=Shopware.Data;e.override("sw-order-detail",{template:'{% block sw_order_detail_content_tabs_general %}\n    {% parent %}\n\n    {% block pay_now_order_payment_tab %}\n        <template v-if="!isLoadingPayNowTransactions">\n            <sw-tabs-item v-for="payNowTransaction in payNowTransactions"\n                          v-bind:key="payNowTransaction.id"\n                          :route="getPayNowDetailsRoute(payNowTransaction.id)"\n                          :title="$tc(\'pay-now-order.general.description\')">\n                {{ $tc(\'pay-now-order.general.title\') }}\n            </sw-tabs-item>\n        </template>\n    {% endblock %}\n{% endblock %}\n\n{% block sw_order_detail_content_view %}\n    <sw-container v-if="hasIncompleteTransaction" columns="1fr" class="pay-now-order-notification-container">\n        <sw-alert variant="warning" appearance="default" :showIcon="true" :closable="false">\n            {{ $tc(\'pay-now-order.notification.invalidTransaction\') }}\n        </sw-alert>\n    </sw-container>\n\n    {% parent %}\n{% endblock %}\n\n\n',data(){return{isLoadingPayNowTransactions:!0,payNowTransactions:[],hasIncompleteTransaction:!1}},computed:{showTabs(){return!0}},watch:{orderId:{deep:!0,handler(){this.loadPayNowTransactions(this.orderId)},immediate:!0}},methods:{loadPayNowTransactions(e){if(!e){this.isLoadingPayNowTransactions=!1;return}this.isLoadingPayNowTransactions=!0;let n=this.repositoryFactory.create("order"),a=new r(1,1);a.addAssociation("transactions"),a.addFilter(r.equals("id",e)),n.search(a,t.api).then(e=>{let t=e.first();t&&(this.identifier||(this.identifier=t.orderNumber),t.transactions.forEach(e=>{this.payNowTransactions.push(e)}))}).finally(()=>{this.isLoadingPayNowTransactions=!1})},getPayNowDetailsRoute(e){return{name:"pay-now-order.payment.detail",params:{id:this.$route.params.id,transactionId:e}}}}});let{Component:a}=Shopware;a.override("sw-order-list",{template:'{% block sw_order_list_grid_columns_order_number %}\n    {% parent %}\n<template #column-orderRefund="{ item }" >\n    <span v-if="item.customFields && item.customFields.refoundAmount">\n        {{ item.customFields.refoundAmount}} {{ item.currency.symbol }}\n    </span>\n</template>\n{% endblock %}\n',methods:{getOrderColumns(){let e=this.$super("getOrderColumns");return e.splice(5,0,{property:"orderRefund",label:this.$tc("pay-now-order.general.orderListLabel"),align:"right",allowResize:!0}),e}}}),n(414);let{Component:o,Mixin:s,Context:i}=Shopware,d=Shopware.Data.Criteria;o.register("pay-now-order-tab",{template:'{% block  pay_now_order_payment_page %}\n<div v-if="!isLoading" class="">\n    <div v-if="showPayNowTab">\n        <sw-card rows="6"\n                 :title="$tc(\'pay-now-order.general.description\')"\n                 :large="false"\n                 :isLoading="isLoading"\n                 class="sw-order-user-card"\n        >\n            <sw-container columns="1fr 1fr" class="pay-now-header">\n\n                <div>\n                    <img class="pay-now-logo" :src="\'crehlerpaynowpayment/static/img/logo_paynow.png\'|asset">\n                </div>\n                <div class="sw-order-user-card__info-summary" v-if="!isLoading">\n                    <div v-for="elements in listOfAmounts" class="pay-now-list-of-elements sw-order-user-card__metadata-price">\n                        {{ elements }} {{ currency }}\n                    </div>\n                </div>\n\n            </sw-container>\n            <sw-container class="pay-now-refund-button">\n                <div>\n                    <sw-button-group>\n                        <sw-button  variant="primary" size="small" @click="modalMode=true" class="">\n                            {{ $tc(\'pay-now-order.buttons.buttonPrepareRefund\') }}\n                        </sw-button>\n                    </sw-button-group>\n                </div>\n\n            </sw-container>\n\n\n            <sw-container class="pay-now-overview">\n                <dl class="sw-description-list sw-order-user-card__summary-vertical">\n                    <dt>{{ $tc(\'pay-now-order.general.overviewLabelPaynowID\') }}</dt>\n                    <dd>\n                        <div class="sw-order-inline-field">{{ order.transactions[0].customFields[\'paynowPaymentId\'] }}\n                        </div>\n                    </dd>\n                </dl>\n                <dl class="sw-description-list sw-order-user-card__summary-vertical">\n                    <dt> {{ $tc(\'pay-now-order.general.overviewLabelPaynowStatus\') }}</dt>\n                    <dd>\n                        <div class="sw-order-inline-field">paid</div>\n                    </dd>\n                </dl>\n            </sw-container>\n\n            <sw-container class="pay-now-overview">\n\n                <dl class="sw-description-list sw-order-user-card__summary-vertical">\n                    <dt> {{ $tc(\'pay-now-order.general.overviewLabelPaynowPaymentAddress\') }}</dt>\n                    <dd>\n                        <div class="sw-order-inline-field">{{ billingAddress.firstName }} {{ billingAddress.lastName }}</div>\n                    </dd>\n                    <dd>\n                        <div class="sw-order-inline-field">{{ billingAddress.street }}</div>\n                    </dd>\n                    <dd>\n                        <div class="sw-order-inline-field">{{ billingAddress.city }} {{ billingAddress.zipcode }}</div>\n                    </dd>\n                </dl>\n\n                <dl class="sw-description-list sw-order-user-card__summary-vertical">\n                    <dt> {{ $tc(\'pay-now-order.general.overviewLabelPaynowDeliveryAddress\') }}</dt>\n                    <dd>\n                        <div class="sw-order-inline-field">{{ shippingAddress.firstName }} {{ shippingAddress.lastName }}</div>\n                    </dd>\n                    <dd>\n                        <div class="sw-order-inline-field">{{ shippingAddress.street }}</div>\n                    </dd>\n                    <dd>\n                        <div class="sw-order-inline-field">{{ shippingAddress.city }} {{ shippingAddress.zipcode }}</div>\n                    </dd>\n                </dl>\n\n            </sw-container>\n\n            <sw-data-grid :isLoading="isLoading"\n                          :showActions="false"\n                          :showSelection="false"\n                          :dataSource="payNowHistory"\n                          :columns="columnsHistory"\n                          class="pay-now-data-grid"\n            >\n                <template #column-productsToPass="{ item, itemIndex }">\n\n                    <sw-data-grid :dataSource="item.productsToPass"\n                                  :showActions="false"\n                                  :columns="columnsHistoryProduct"\n                                  :showSelection="false">\n                    </sw-data-grid>\n                </template>\n            </sw-data-grid>\n\n            <div order="order">\n                <sw-modal v-if="modalMode" @modal-close="modalModeFalse" title="paynow zwroty"\n                          selector=".example .panel--content" class="pay-now-modal">\n\n                    <sw-data-grid :showActions="false" :showSelection="false" :dataSource="orderItems" :columns="columns">\n                        <template #column-input="{ item, itemIndex }">\n\n                            <sw-number-field @change="calculateRefund" v-model:value="item.toRefund" numberType="int" :step="null"\n                                             :min="0" :max="item.quantity" :allowEmpty="true">\n                                0\n                            </sw-number-field>\n\n                        </template>\n                    </sw-data-grid>\n                    <div  v-if="refundError">\n                        <sw-alert variant="warning"\n                                  :closable="true">\n                            <p>{{ $tc(\'pay-now-order.errors.refusedRefund\') }}</p>\n                        </sw-alert>\n                    </div>\n                    <div  v-if="refundAmountTooBig">\n                        <sw-alert variant="warning"\n                                  :closable="true">\n                            <p>{{ $tc(\'pay-now-order.errors.toMuch\') }}</p>\n                        </sw-alert>\n                    </div>\n                    <div  v-if="refundAmountTooSmall">\n                        <sw-alert variant="warning"\n                                  :closable="true">\n                            <p>{{ $tc(\'pay-now-order.errors.minimalAmount\') }}</p>\n                        </sw-alert>\n                    </div>\n                    <div>\n                        {{ $tc(\'pay-now-order.modal.refundAmount\') }}\n                    </div>\n                    <sw-number-field v-model:value="amountToRefund" numberType="float" min=0 :allowEmpty="false">\n\n                    </sw-number-field>\n\n                    <div>\n                        {{ $tc(\'pay-now-order.modal.refundDescription\') }}\n                    </div>\n                    <div>\n                        <sw-single-select\n                                labelProperty="labelProperty"\n                                valueProperty="value"\n                                v-model:value="descriptionToRefund"\n                                :options="refundReasons"/>\n                    </div>\n                    <sw-button variant="primary"\n                               size="small"\n                               :isLoading="isLoading"\n                               @click="doRefund">\n                        {{ $tc(\'pay-now-order.buttons.buttonRefund\') }}\n                    </sw-button>\n                </sw-modal>\n            </div>\n        </sw-card>\n    </div>\n    <div v-else>\n        <sw-card>\n            {{ $tc(\'pay-now-order.general.differentPaymentMethod\') }}\n        </sw-card>\n    </div>\n</div>\n{% endblock %}\n',inject:["PayNowOrderService","repositoryFactory"],mixins:[s.getByName("notification"),s.getByName("sw-inline-snippet")],data(){return{showPayNowTab:!1,refundAmountTooBig:!1,refundAmountTooSmall:!1,refundError:!1,refundOk:!1,refundRejected:!1,succesfulProductsList:[],currency:null,listofPaymentsIdToFetch:[],listOfAmounts:[],refundStatus:null,refundPending:!1,order:null,orderItems:[],orderTransactionIds:[],orderTransactionArray:[],payNowHistory:[],isLoading:!0,isSuccess:!0,transaction:null,refreshTime:5e3,refreshing:!1,refreshHandler:null,amountToRefund:0,descriptionToRefund:"OTHER",checkedProduct:null,modalMode:!1,orderLineItems:[],productsToRefund:[],refundReasons:[{value:"RMA",labelProperty:"reklamacja"},{value:"REFUND_BEFORE_14",labelProperty:"zwrot poniżej 14 dni od zakupu"},{value:"REFUND_AFTER_14",labelProperty:"zwrot powyżej 14 dni od zakupu"},{value:"OTHER",labelProperty:"inny pow\xf3d"}]}},computed:{orderRepository(){return this.repositoryFactory.create("order")},transactionRepository(){return this.repositoryFactory.create("order_transaction")},payNowRefundRepository(){return this.repositoryFactory.create("paynow_refund_history")},columns(){return[{property:"input",label:"Do zwrotu",rawData:!0},{property:"quantity",label:"Ilość",rawData:!0},{property:"refundedQty",label:"Zwr\xf3cono",rawData:!0},{property:"label",label:"Nazwa",rawData:!0},{property:"unitPrice",label:"Cena/sztukę",rawData:!0},{property:"totalPrice",label:"Cena/całość",rawData:!0}]},columnsHistory(){return[{property:"paynowStatus",label:"Status",rawData:!0},{property:"refundAmount",label:"Ilość",rawData:!0},{property:"refundId",label:"PayNow ID",rawData:!0},{property:"createdAt",label:"Data utworzenia",rawData:!0}]},columnsHistoryProduct(){return[{property:"qty",label:"Ilość"},{property:"label",label:"Nazwa"}]},billingAddress(){let e=this.order.billingAddressId;return this.order.addresses.get(e)},shippingAddress(){return this.order.deliveries.last().shippingOrderAddress}},watch:{$route(){this.createdComponent()}},created(){this.createdComponent()},methods:{modalModeFalse(){this.modalMode=!1},calculateRefund(){this.amountToRefund=0,this.productsToRefund=[],this.orderItems.forEach(e=>{if(e.toRefund>e.quantity)return e.toRefund=0,this.createNotificationError({title:"Error",message:this.$tc("pay-now-order.notification.alert")});this.amountToRefund+=e.toRefund*e.unitPrice,this.productsToRefund.push({id:e.id,refundedQty:e.toRefund})})},refreshDataSource(){this.payNowHistory=[],this.listOfAmounts=[],this.listOfAmounts.push(this.order.price.totalPrice);let e=[];this.orderTransactionIds.forEach(t=>{e.push(this.loadPayNowHistory(t))}),Promise.all(e).then(e=>{e.forEach(e=>{e.forEach(e=>{let t=e.createdAt.slice(0,10)+" "+e.createdAt.slice(11,19);this.payNowHistory.push({id:e.id,paynowStatus:e.paynowStatus,refundAmount:e.refundAmount,refundId:e.refundId,productList:e.productList,createdAt:t}),"zwrot zaakceptowany"===e.paynowStatus&&(e.productList.forEach(e=>{this.succesfulProductsList.push({id:Object.keys(e)[0],qty:parseInt(Object.values(e)[0],10)})}),this.listOfAmounts.push(e.refundAmount))})}),this.compareLineItems()})},dataSource(){this.order.lineItems.forEach(e=>this.orderItems.push({id:e.id,quantity:e.quantity,refundedQty:0,label:e.label,unitPrice:e.price.unitPrice,totalPrice:e.price.totalPrice,toRefund:0})),this.order.deliveries.forEach(e=>{e.shippingCosts.totalPrice&&this.orderItems.push({id:e.id,quantity:1,refundedQty:0,label:e.shippingMethod.name,unitPrice:e.shippingCosts.totalPrice,totalPrice:e.shippingCosts.totalPrice,toRefund:0})}),this.order.transactions.forEach(e=>this.orderTransactionIds.push(e.id));let e=[];this.orderTransactionIds.forEach(t=>{e.push(this.loadPayNowHistory(t))}),Promise.all(e).then(e=>{e.forEach(e=>{e.forEach(e=>{let t=e.createdAt.slice(0,10)+" "+e.createdAt.slice(11,19);this.payNowHistory.push({id:e.id,paynowStatus:e.paynowStatus,refundAmount:e.refundAmount,refundId:e.refundId,productList:e.productList,createdAt:t}),"zwrot zaakceptowany"===e.paynowStatus?(e.productList.forEach(e=>{this.succesfulProductsList.push({id:Object.keys(e)[0],qty:parseInt(Object.values(e)[0],10)})}),this.listOfAmounts.push(e.refundAmount)):this.listofPaymentsIdToFetch.push(e.refundId)})}),this.compareLineItems(),this.fetchStatus(),this.groupProducts(),this.prepareRefoundedProducts()})},groupProducts(){let e=this.succesfulProductsList.reduce((e,t)=>e.set(t.id,(e.get(t.id)||0)+Number(t.qty)),new Map);this.succesfulProductsList=Array.from(e,([e,t])=>({id:e,qty:t}))},prepareRefoundedProducts(){this.orderItems.forEach((e,t)=>{this.succesfulProductsList.forEach(t=>{e.id===t.id&&(e.refundedQty=t.qty)})})},compareLineItems(){this.payNowHistory.forEach(e=>{e.productsToPass=[]}),this.payNowHistory.forEach((e,t)=>{e.productList.forEach(t=>{let n=Object.keys(t)[0],r=Object.values(t)[0];this.orderItems.forEach(t=>{t.id===n&&e.productsToPass.push({qty:r,label:t.label})})})})},loadPayNowHistory(e){let t=new d(1,25);return t.addFilter(d.equals("transactionId",e)),this.payNowRefundRepository.search(t,i.api)},createdComponent(){this.loadData()},doRefund(){let e=this;this.amountToRefund>this.order.amountTotal?this.refundAmountTooBig=!0:this.amountToRefund<1?this.refundAmountTooSmall=!0:this.PayNowOrderService.refundPayment(this.order.id,this.amountToRefund.toFixed(2),this.descriptionToRefund,this.productsToRefund).then(()=>{this.createNotificationSuccess({title:"Succes",message:this.$tc("pay-now-order.notification.success")}),this.refreshDataSource(),e.modalModeFalse()}).catch(()=>{this.createNotificationError({title:"Error",message:this.$tc("pay-now-order.notification.failure")})})},fetchStatus(){let e=[];this.listofPaymentsIdToFetch.forEach(t=>{e.push(this.PayNowOrderService.fetchStatus(t))}),Promise.all(e).then(e=>{this.refreshDataSource()})},loadData(){let e=this.$route.params.id;this.loadOrder(e).then(e=>{this.order=e,this.isLoading=!1,this.listOfAmounts.push(e.price.totalPrice),this.currency=e.currency.symbol,this.dataSource(),null!==e.transactions[0].customFields&&null!==e.transactions[0].customFields.paynowPaymentId&&(this.showPayNowTab=!0),this.isLoading=!1})},loadOrder(e){let t=new d(1,1);return t.addAssociation("addresses"),t.addAssociation("currency"),t.addAssociation("deliveries"),t.addAssociation("deliveries.shippingMethod"),t.addAssociation("transactions"),t.addAssociation("lineItems"),t.addAssociation("orderCustomer"),this.orderRepository.get(e,i.api,t)}}});let{Module:l}=Shopware;l.register("pay-now-order",{type:"plugin",name:"PayNowOrder",title:"pay-now-order.general.title",description:"pay-now-order.general.description",version:"1.0.0",targetVersion:"1.0.0",routeMiddleware(e,t){"sw.order.detail"===t.name&&t.children.push({component:"pay-now-order-tab",name:"pay-now-order.payment.detail",isChildren:!0,path:"/sw/order/pay-now-order/detail/:id/:transactionId"}),e(t)}}),n(395),n(606);let{Component:c,Mixin:u,Context:p}=Shopware,{Criteria:h}=Shopware.Data;c.register("paynow-settings",{template:'<div>\n\n    <sw-button :disabled="false" variant="primary" :square="false" :block="false" :isLoading="isLoading"\n               @click="onTestCredentials">\n        TEST API\n    </sw-button>\n\n    <div class="crehler-configuration-url" >\n        <sw-text-field  disabled="yes" :copyable="true" :copyableTooltip="true" :value="notificationUrl">\n            <template v-slot:label> {{ $tc(\'pay-now-order.url.notification\') }}</template>\n        </sw-text-field>\n    </div>\n    <div class="crehler-configuration-url" >\n        <sw-text-field  disabled="yes" :copyable="true" :copyableTooltip="true" :value="returnUrl">\n            <template v-slot:label>{{ $tc(\'pay-now-order.url.return\') }}</template>\n        </sw-text-field>\n    </div>\n</div>\n',inject:["repositoryFactory","PayNowOrderService","systemConfigApiService"],mixins:[u.getByName("notification")],data(){return{isLoading:!1,notificationUrl:"notification",returnUrl:"return"}},created(){if("CrehlerPayNowPayment"===document.documentURI.split("/").pop()){let e;e="pl-PL"===Shopware.Context.app.fallbackLocale?"paynow konfiguracja":"paynow configuration",document.getElementsByClassName("sw-meteor-page__smart-bar-title")[0].innerText=e}this.getSalesChannel()},computed:{salesChannelDomainRepository(){return this.repositoryFactory.create("sales_channel_domain")}},methods:{async onTestCredentials(){try{let e=await this.PayNowOrderService.testApi();console.log(e),this.createNotificationSuccess({title:"Success",message:this.$tc("pay-now-order.notification.testSucces")})}catch(e){this.createNotificationError({title:"Error",message:this.$tc("pay-now-order.notification.testError")})}},async getSalesChannel(){let e=new h;e.addAssociation("salesChannel"),(await this.salesChannelDomainRepository.search(e,p.api)).forEach(e=>{if("https"===e.url.split(":")[0]&&e.salesChannel.active){let t=document.getElementById("salesChannelSelect");("All Sales Channels"===(t=t.getElementsByClassName("sw-entity-single-select__selection-text")[0].innerText)||"Wszystkie kanały sprzedaży"===t||e.salesChannel.name===t)&&(this.notificationUrl=e.url+"/paynowpayment/notification",this.returnUrl=e.url)}})}}})}()})();